{"version":3,"sources":["rsvpApi.js","Alert.js","RsvpForm.js","App.js","reportWebVitals.js","index.js"],"names":["rsvpApi","add","rsvp","a","fetch","method","body","JSON","stringify","mode","headers","Alert","props","elevation","variant","RsvpForm","useForm","handleSubmit","register","reset","useState","toastOpen","setToastOpen","onSubmit","Container","fluid","className","Header","as","Form","Field","placeholder","Button","color","type","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","_","reason","severity","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAGaA,EAAU,CACnBC,IAAI,WAAD,4BAAE,WAAOC,GAAP,SAAAC,EAAA,sEACKC,MAAM,GAAD,OAJW,0CAIX,aAEP,CACIC,OAAQ,OACRC,KAAMC,KAAKC,UAAUN,GACrBO,KAAM,OACNC,QAAS,CACP,eAAgB,sBARzB,2CAAF,mDAAC,I,0BCFKC,EAAQ,SAACC,GAClB,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGC,QAAQ,UAAaF,KCS3CG,EAAW,WAAO,IAAD,EACgBC,cAAlCC,EADkB,EAClBA,aAAcC,EADI,EACJA,SAAUC,EADN,EACMA,MADN,EAEQC,oBAAS,GAFjB,mBAEnBC,EAFmB,KAERC,EAFQ,KAIpBC,EAAQ,uCAAG,WAAOrB,GAAP,SAAAC,EAAA,sEACPH,EAAQC,IAAIC,GADL,OAEboB,GAAa,GACbH,IAHa,2CAAH,sDAcd,OACI,eAACK,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,YAA3B,UACI,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAX,iBACA,eAACC,EAAA,EAAD,CAAMH,UAAU,OAAOH,SAAUN,EAAaM,GAA9C,UACI,eAACM,EAAA,EAAKC,MAAN,WACI,yCACA,mCAAOC,YAAY,mBAAsBb,EAAS,aAEtD,eAACW,EAAA,EAAKC,MAAN,WACI,8CACA,mCAAOC,YAAY,oCAAuCb,EAAS,kBAEvE,eAACW,EAAA,EAAKC,MAAN,WACI,6CACA,mCAAOC,YAAY,kBAAqBb,EAAS,iBAGrD,cAACc,EAAA,EAAD,CAAQC,MAAM,OAAOC,KAAK,SAA1B,uBAEJ,cAACC,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,KAAMlB,EACNmB,iBAAkB,IAClBC,QAlCa,SAACC,EAAGC,GACV,cAAXA,GAGJrB,GAAa,IAuBT,SASI,cAAC,EAAD,CAAOsB,SAAS,UAAhB,8CC/CDC,MARf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACI,cAAC,EAAD,OCMOoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.db3e76de.chunk.js","sourcesContent":["const BASE_URL = process.env.NODE_ENV === 'development' ?\n    'http://localhost:8080' : 'https://rsvp-yo-4lec554gkq-as.a.run.app'\n\nexport const rsvpApi = {\n    add: async (rsvp) => {\n        await fetch(\n            `${BASE_URL}/api/rsvp`,\n            {\n                method: 'POST',\n                body: JSON.stringify(rsvp),\n                mode: 'cors',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n            \n            },\n        );\n    }\n};","import MuiAlert from '@material-ui/lab/Alert';\n\nexport const Alert = (props) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  };\n  ","import React, { Component } from 'react'\nimport { Button, Form, Container, Header } from 'semantic-ui-react'\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport { useForm } from 'react-hook-form';\nimport { rsvpApi } from './rsvpApi';\nimport { Snackbar } from '@material-ui/core';\nimport { useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert } from './Alert';\n\nexport const RsvpForm = () => {\n    const { handleSubmit, register, reset } = useForm();\n    const [toastOpen, setToastOpen] = useState(false);\n\n    const onSubmit = async (rsvp) => {\n        await rsvpApi.add(rsvp);\n        setToastOpen(true);\n        reset();\n    };\n\n    const handleToastClose = (_, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setToastOpen(false);\n    };\n\n\n    return (\n        <Container fluid className=\"container\">\n            <Header as='h2'>hey</Header>\n            <Form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                <Form.Field>\n                    <label>Name</label>\n                    <input placeholder='Enter your name' {...register('name')} />\n                </Form.Field>\n                <Form.Field>\n                    <label>Attendees</label>\n                    <input placeholder='How many peeps are you bringing?' {...register('attendees')} />\n                </Form.Field>\n                <Form.Field>\n                    <label>Comments</label>\n                    <input placeholder='Anything else?' {...register('comments')} />\n                </Form.Field>\n\n                <Button color=\"blue\" type='submit'>Submit</Button>\n            </Form>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                open={toastOpen}\n                autoHideDuration={2000}\n                onClose={handleToastClose}\n            >\n                <Alert severity=\"success\">gotcha thanks &#127773;</Alert>\n            </Snackbar>\n        </Container>\n    )\n};\n","import './App.css';\nimport { RsvpForm } from './RsvpForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <RsvpForm/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}